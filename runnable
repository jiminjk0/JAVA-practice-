// runnable

// extending to threads


 class A implements Runnable{
    //there is no start method t
         
  public void run(){
    for(int i=0; i<=5; i++){
        System.out.println("Hi"); // after printing one hi we can ask scheduler to wait
       // it throws an exception
        try{
            Thread.sleep(10); 
        }
    catch(InterruptedException e){
        e.printStackTrace();
    }
    
  }  
 }
}

 class B implements Runnable{
    public void run(){
      for(int i=0; i<=5; i++){
          System.out.println("Hello");
          try{
            Thread.sleep(10); 
        }
    catch(InterruptedException e){
        e.printStackTrace();
    }
  
      }
    }  
   }


 public class main 
 {
    public static void main(String args[])
    {
         Runnable obj1 = new A(); // runnable type and object of the class
         Runnable obj2 = new B();
        
         Thread t1 = new Thread(obj1); // as start does not belong to runnable we have to create objects of threads
         Thread t2 = new Thread(obj2);
        // these threads have no idea of obj1 or obj2
         t1.start(); 
         t2.start();

        
    }
 }
